{"mappings":"qqBAGcA,EAAU,IACpBC,KAAKD,QAAUA,EACfC,KAAKC,cAAgB,GACrBD,KAAKE,OAGPA,OACE,MAAMC,EAAe,IAAIC,EAAAC,QAAaL,KAAKD,SAC3CC,KAAKC,cAAcK,KAAKH,GAG1BI,IAAIJ,GACFH,KAAKC,cAAcK,KAAKH,GAG1BK,OAAOC,GACLT,KAAKC,cAAgBD,KAAKC,cAAcS,QAAOC,GAAKA,IAAMF,IAG5DG,QACEZ,KAAKC,cAAgB,GAGvBY,mBACE,OAAOb,KAAKC,uICvBDa,MAACA,EAAKC,QAAEA,EAAOC,KAAEA,EAAO,OAAMC,MAAEA,EAAKC,SAAEA,EAAW,MAC7DlB,KAAKmB,QAAU,IAAIC,EAAAf,QAAQ,MAAO,CAChCgB,GAAE,YAAcC,KAAKC,QACrBC,MAAK,YAAcR,MAErBhB,KAAKc,MAAQA,EACbd,KAAKe,QAAUA,EACff,KAAKkB,SAAWA,EAChBlB,KAAKiB,MAAQA,EACbjB,KAAKE,OAGPA,OACEuB,EAAApB,QAAOL,KAAKiB,OACZjB,KAAK0B,SACL1B,KAAK2B,OACL3B,KAAK4B,QAGPD,OACE3B,KAAK6B,SACLT,EAAAf,QAAQyB,IAAG,qBAAsB9B,KAAKiB,MAAQ,IAAMjB,KAAKiB,MAAQ,KAAOc,YAAY/B,KAAKgC,UAG3FH,SACE7B,KAAKgC,SAAWhC,KAAKmB,QAAQU,SAC7B7B,KAAKgC,SAASC,QAAO,KACnBjC,KAAKQ,UAEPR,KAAKgC,SAASE,UAAU3B,IAAI,WAC5B4B,YAAU,KACRnC,KAAKgC,SAASE,UAAU1B,OAAO,aAC9B,KAGLkB,SACE,MAAMZ,EAAQ,IAAIM,EAAAf,QAAQ,IAAK,CAC7BmB,MAAO,SACNxB,KAAKc,OACFC,EAAU,IAAIK,EAAAf,QAAQ,IAAK,CAC/BmB,MAAO,WACNxB,KAAKe,SAERf,KAAKmB,QAAQY,YAAYjB,GACzBd,KAAKmB,QAAQY,YAAYhB,GAG3BP,SACER,KAAKgC,SAASE,UAAU3B,IAAI,QAC5B4B,YAAU,KACRnC,KAAKgC,SAASxB,WACb,KAGLoB,QACEO,YAAU,KACRnC,KAAKQ,WACJR,KAAKkB,oGC5DEkB,EAASC,EAAa,GAAIC,EAAU,IAC9CtC,KAAKoC,QAAUA,EACfpC,KAAKqC,WAAaA,EAClBrC,KAAKuC,SAAW,GAChBvC,KAAKsC,QAAUA,EACftC,KAAKwC,GAAKC,SAASC,cAAc1C,KAAKoC,SACtCpC,KAAKE,OAGPA,OACMF,KAAKsC,SAAStC,KAAK2C,KAAK3C,KAAKsC,SAGnCP,YAAYa,GACV5C,KAAKuC,SAASjC,KAAKsC,GAGrBC,KAAKA,GACH7C,KAAKwC,GAAGM,UAAYD,EAGtBF,KAAKA,GACH3C,KAAKwC,GAAGO,YAAcJ,EAGxBd,SAOE,OANAmB,OAAOC,KAAKjD,KAAKqC,YAAYa,SAAQC,IACnCnD,KAAKwC,GAAGY,aAAaD,EAAMnD,KAAKqC,WAAWc,OAE7CnD,KAAKuC,SAASW,SAAQG,IACpBrD,KAAKwC,GAAGT,YAAYsB,EAAMxB,aAErB7B,KAAKwC,GAGdhC,SACER,KAAKwC,GAAGhC,oBAGC8C,GACT,OAAOb,SAASc,cAAcD,0FCvClCE,EAIC,CAJevC,EAAQ,kBACtB,GAAIG,EAAAf,QAAQyB,IAAG,qBAAsBb,EAAQ,IAAMA,EAAQ,KAAQ,OACnE,MAAMwC,EAAkB,IAAIrC,EAAAf,QAAQ,MAAO,CAAEgB,GAAI,mBAAoBG,MAAK,GAAKP,MAC/EwB,SAASiB,KAAKC,sBAAsB,WAAYF,EAAgB5B","sources":["Documents/Github/notifier-v2/src/index.js","Documents/Github/notifier-v2/src/Notification.js","Documents/Github/notifier-v2/src/Element.js","Documents/Github/notifier-v2/src/Loader.js"],"sourcesContent":["import Notification from './Notification';\r\n\r\nexport default class Notifier {\r\n  constructor(options = {}) {\r\n    this.options = options;\r\n    this.notifications = [];\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    const notification = new Notification(this.options);\r\n    this.notifications.push(notification);\r\n  }\r\n\r\n  add(notification) {\r\n    this.notifications.push(notification);\r\n  }\r\n\r\n  remove(notification) {\r\n    this.notifications = this.notifications.filter(n => n !== notification);\r\n  }\r\n\r\n  clear() {\r\n    this.notifications = [];\r\n  }\r\n\r\n  getNotifications() {\r\n    return this.notifications;\r\n  }\r\n}","import Element from \"./Element\";\r\nimport Loader from './Loader';\r\n\r\nexport default class Notification {\r\n  constructor({ title, message, type = 'dark', align, duration = 3000 }) {\r\n    this.element = new Element('div', {\r\n      id: `notifier-${Date.now()}`,\r\n      class: `notifier ${type}`\r\n    });\r\n    this.title = title;\r\n    this.message = message;\r\n    this.duration = duration;\r\n    this.align = align;\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    Loader(this.align);\r\n    this.create();\r\n    this.show();\r\n    this.timer();\r\n  }\r\n\r\n  show() {\r\n    this.render()\r\n    Element.get(`#notifier-wrapper${ this.align ? '.' + this.align : '' }`).appendChild(this.rendered);\r\n  }\r\n\r\n  render() {\r\n    this.rendered = this.element.render();\r\n    this.rendered.onclick = () => {\r\n      this.remove();\r\n    };\r\n    this.rendered.classList.add('fade-in');\r\n    setTimeout(() => {\r\n      this.rendered.classList.remove('fade-in');\r\n    }, 1000);\r\n  }\r\n\r\n  create() {\r\n    const title = new Element('p', {\r\n      class: 'title'\r\n    }, this.title);\r\n    const message = new Element('p', {\r\n      class: 'message'\r\n    }, this.message);\r\n    \r\n    this.element.appendChild(title);\r\n    this.element.appendChild(message);\r\n  }\r\n\r\n  remove() {\r\n    this.rendered.classList.add('hide');\r\n    setTimeout(() => {\r\n      this.rendered.remove();\r\n    }, 600);\r\n  }\r\n\r\n  timer() {\r\n    setTimeout(() => {\r\n      this.remove();\r\n    }, this.duration);\r\n  }\r\n}","export default class Element {\r\n  constructor(tagName, attributes = {}, content = '') {\r\n    this.tagName = tagName;\r\n    this.attributes = attributes;\r\n    this.children = [];\r\n    this.content = content;\r\n    this.el = document.createElement(this.tagName);\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    if (this.content) this.text(this.content);\r\n  }\r\n\r\n  appendChild(child) {\r\n    this.children.push(child);\r\n  }\r\n\r\n  html(html) {\r\n    this.el.innerHTML = html;\r\n  }\r\n\r\n  text(text) {\r\n    this.el.textContent = text;\r\n  }\r\n\r\n  render() {\r\n    Object.keys(this.attributes).forEach(attr => {\r\n      this.el.setAttribute(attr, this.attributes[attr]);\r\n    });\r\n    this.children.forEach(child => {\r\n      this.el.appendChild(child.render());\r\n    });\r\n    return this.el;\r\n  }\r\n\r\n  remove() {\r\n    this.el.remove();\r\n  }\r\n\r\n  static get(query) {\r\n    return document.querySelector(query);\r\n  }\r\n}","import Element from './Element';\r\n\r\nexport default (align = 'bottom-right') => {\r\n  if (Element.get(`#notifier-wrapper${ align ? '.' + align : '' }`)) return\r\n  const NotifierWrapper = new Element('div', { id: 'notifier-wrapper', class: `${align}` });\r\n  document.body.insertAdjacentElement('afterend', NotifierWrapper.render());\r\n}"],"names":["options","this","notifications","init","notification","$kODri","default","push","add","remove","notification1","filter","n","clear","getNotifications","title","message","type","align","duration","element","$4wVIC","id","Date","now","class","$eEI3M","create","show","timer","render","get","appendChild","rendered","onclick","classList","setTimeout","tagName","attributes","content","children","el","document","createElement","text","child1","html","innerHTML","textContent","Object","keys","forEach","attr","setAttribute","child","query","querySelector","$aab6fa8469b778cb$export$2e2bcd8739ae039","NotifierWrapper","body","insertAdjacentElement"],"version":3,"file":"index.fffeeb04.js.map"}